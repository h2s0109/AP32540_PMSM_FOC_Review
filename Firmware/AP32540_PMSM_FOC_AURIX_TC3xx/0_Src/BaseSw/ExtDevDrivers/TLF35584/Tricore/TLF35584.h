/*
 * \file TLF35584.h
 * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
 *
 *                            IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef TLF35584_H
#define TLF35584_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/
#include "Cpu/Std/Ifx_Types.h"

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/
// SPI Configurations for TLF35584 Channel
#define IFX_TLF35584_SPI_BUFFER_SIZE         (1U)
#define IFX_TLF35584_BAUDRATE                (5.0e6)
#define IFX_TLF35584_BAUDRATE                (5.0e6)
#define IFX_TLF35584_DATAWIDTH               (16U)

/******************************************************************************/
/*--------------------------------Enumerations--------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-----------------------------Data Structures--------------------------------*/
/******************************************************************************/


typedef boolean (*IfxTLF35584_SpiExchangeIfPtrType)(void *, void *, void *, Ifx_SizeT);
typedef boolean (*IfxTLF35584_SpiGetStatusIfPtrType)(void *);

typedef struct
{
	IfxTLF35584_SpiExchangeIfPtrType  spiExchange;
	IfxTLF35584_SpiGetStatusIfPtrType spiGetStatus;
}IfxTLF35584_spiInterfaces;

typedef struct
{
    void                      *spiChannel;
	IfxTLF35584_spiInterfaces spiIf;
} IfxTLF35584_Config;


/** \brief TLF35584 Data
 *
 * */
typedef struct
{
	void                     *spiChannel;                   /**< \brief pointer to Qspi channel data */
	IfxTLF35584_spiInterfaces spiIf;
    uint32                    transmitBuffer[IFX_TLF35584_SPI_BUFFER_SIZE];    /**< \brief Qspi TX buffer */
    uint32                    receiveBuffer[IFX_TLF35584_SPI_BUFFER_SIZE];    /**< \brief Qspi buffer */
    uint8                     aStep;
} IfxTLF35584;
/******************************************************************************/
/*------------------------------Global variables------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-------------------------Function Prototypes--------------------------------*/
/******************************************************************************/
void IfxTLF35584_init(IfxTLF35584 *tlf35584, IfxTLF35584_Config *config);
void IfxTLF35584_unprotectRegister(void);
void IfxTLF35584_protectRegister(void);
void IfxTLF35584_disableWindowWatchdog(void);
void IfxTLF35584_enableWindowWatchdog(void);
void IfxTLF35584_disableErrPinMonitor(void);
void IfxTLF35584_enableErrPinMonitor(void);
void IfxTLF35584_gotoNormalState(void);
void IfxTLF35584_gotoStandbyState(void);
uint32 IfxTLF35584_readWrite(uint32 sendData);

#endif  // TLF35584_H
