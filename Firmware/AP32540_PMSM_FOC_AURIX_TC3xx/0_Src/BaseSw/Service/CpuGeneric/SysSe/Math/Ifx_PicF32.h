/**
 * \file Ifx_PicF32.h
 * \brief Proportional integral controller.
 * \ingroup library_srvsw_sysse_math_f32_pic
 *
 *
 *
 * \version disabled
 * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
 *
 *                            IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 * \defgroup library_srvsw_sysse_math_f32_pic Proportional-Integral Controller
 *
 * This module implements the Proportional integral controller, using the First Order Hold method.
 *  U(k+1)= A1 * I(k+1) + A0 * Ik + Uk
 *  Where:
 *  - A0 = kp * (wpi * TSample/2 - 1)
 *  - A1 = kp * (wpi * TSample/2 + 1)
 *  - wpi = ki / kp   (rad/s)
 *  - TSample is the sample time in seconds
 *
 *
 * \ingroup library_srvsw_sysse_math_f32
 *
 */

#if !defined(IFX_PICF32)
#define IFX_PICF32
//------------------------------------------------------------------------------
#include "Cpu/Std/Ifx_Types.h"
//------------------------------------------------------------------------------
/** \brief PI object definition.
 */
typedef struct
{
    float32 a0;                        /**< \brief A0 parameter */
    float32 a1;                        /**< \brief A1 parameter */
    float32 uk;                        /**< \brief high resolution PI output value */
    float32 ik;                        /**< \brief PI last error value */
    float32 lower;                     /**< \brief PI min limit */
    float32 upper;                     /**< \brief PI max limit */
    uint8   hitLimits;                 /**< \brief PI limit hit flag */
} Ifx_PicF32;

/** \brief PI controller configuration */
typedef struct
{
    float32 kp;             /**< \brief Direct (Proportional) gain */
    float32 ki;             /**< \brief Integrator gain */
} Ifx_PicF32_Config;

IFX_EXTERN void Ifx_PicF32_init(Ifx_PicF32 *pic);
IFX_EXTERN void Ifx_PicF32_reset(Ifx_PicF32 *pic);

IFX_EXTERN void Ifx_PicF32_setKpKi(Ifx_PicF32 *pic, float32 kp, float32 ki, float32 Ts);
IFX_EXTERN void Ifx_PicF32_getKpKi(Ifx_PicF32 *pic, float32 *kp, float32 *ki, float32 Ts);

IFX_EXTERN void Ifx_PicF32_setLimit(Ifx_PicF32 *pic, float32 lowerLimit, float32 upperLimit);
IFX_EXTERN void Ifx_PicF32_getLimit(Ifx_PicF32 *pic, float32 *lowerLimit, float32 *upperLimit);

IFX_EXTERN float32 Ifx_PicF32_step(Ifx_PicF32 *pic, float32 Input);

IFX_EXTERN boolean Ifx_PicF32_isLimitsHit(Ifx_PicF32 *pic);
IFX_EXTERN void    Ifx_PicF32_resetLimitHit(Ifx_PicF32 *pic);

#endif
