/**
 * \file TLF3xx8x.h
 * \brief Header file of TLF3xx8x communication and initialization
 *
 * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.

 *
 */

#ifndef TLF3XX8X_H
#define TLF3XX8X_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/
#include "PmsmFoc_UserConfig.h"
#include MCUCARD_TYPE_PATH
#include "IfxCpu_cfg.h"
#include <Qspi/SpiMaster/IfxQspi_SpiMaster.h>

#define TLF_BUFFER_SIZE 1   /**< \brief Tx/Rx Buffer size */

typedef struct
{
    uint32 spiTxBuffer[TLF_BUFFER_SIZE];                               /**< \brief Qspi Transmit buffer */
    uint32 spiRxBuffer[TLF_BUFFER_SIZE];                               /**< \brief Qspi receive buffer */
} AppQspi_TLF_Buffer;

/** \brief QspiCpu global data */
typedef struct
{
    AppQspi_TLF_Buffer qspiBuffer;                       /**< \brief Qspi buffer */
    struct
    {
        IfxQspi_SpiMaster         spiMaster;             /**< \brief Spi Master handle */
        IfxQspi_SpiMaster_Channel spiMasterChannel;      /**< \brief Spi Master Channel handle */
    }drivers;
}  App_Qspi_TLF_Cpu;

#if defined(__DCC__)
    #if CPU_WHICH_SERVICE_TLF == 0
	#pragma section DATA ".data_cpu0" ".bss_cpu0" far-absolute RW
    #pragma section CODE ".text_cpu0"
    #elif ((CPU_WHICH_SERVICE_TLF == 1) && (CPU_WHICH_SERVICE_TLF < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu1" ".bss_cpu1" far-absolute RW
    #pragma section CODE ".text_cpu1"
    #elif ((CPU_WHICH_SERVICE_TLF == 2) && (CPU_WHICH_SERVICE_TLF < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu2" ".bss_cpu2" far-absolute RW
    #pragma section CODE ".text_cpu2"
    #elif ((CPU_WHICH_SERVICE_TLF == 3) && (CPU_WHICH_SERVICE_TLF < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu3" ".bss_cpu3" far-absolute RW
    #pragma section CODE ".text_cpu3"
    #elif ((CPU_WHICH_SERVICE_TLF == 4) && (CPU_WHICH_SERVICE_TLF < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu4" ".bss_cpu4" far-absolute RW
    #pragma section CODE ".text_cpu4"
    #elif ((CPU_WHICH_SERVICE_TLF == 5) && (CPU_WHICH_SERVICE_TLF < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu5" ".bss_cpu5" far-absolute RW
    #pragma section CODE ".text_cpu5"
    #endif
#endif

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*--------------------------------Enumerations--------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-----------------------------Data Structures--------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*------------------------------Global variables------------------------------*/
/******************************************************************************/
extern App_Qspi_TLF_Cpu g_Qspi_TLF_Cpu;
/******************************************************************************/
/*-------------------------Function Prototypes--------------------------------*/
/******************************************************************************/
IFX_EXTERN void IfxTLF3XX8X_initSpi(void);
IFX_EXTERN void IfxTLF3XX8X_unprotect_register(void);
IFX_EXTERN void IfxTLF3XX8X_protect_register(void);
IFX_EXTERN void IfxTLF3XX8X_disable_window_watchdog(void);
IFX_EXTERN void IfxTLF3XX8X_enable_window_watchdog(void);
IFX_EXTERN void IfxTLF3XX8X_disable_err_pin_monitor(void);
IFX_EXTERN void IfxTLF3XX8X_enable_err_pin_monitor(void);
IFX_EXTERN void IfxTLF3XX8X_goto_normal_state(void);
IFX_EXTERN void IfxTLF3XX8X_goto_standby_powerdown_state(void);
IFX_EXTERN uint32 IfxTLF3XX8X_read_write(uint32 send_data);

#if defined(__DCC__)
#pragma section CODE
#pragma section DATA RW
#endif

#endif  // TLF3XX8X_H
