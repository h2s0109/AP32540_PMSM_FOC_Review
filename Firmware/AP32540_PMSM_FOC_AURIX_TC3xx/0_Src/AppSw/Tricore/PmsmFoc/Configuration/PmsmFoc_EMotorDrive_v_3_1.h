/*
 * \file PmsmFoc_eMotorDrive_v_3_1.h
 * \brief
 * \ingroup pmsm_foc_configuration
 * \version
 * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
 *
 *                            IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */


#ifndef PPMSM_FOC_EMOTORDRIVE_V_3_1_H_
#define PMSM_FOC_EMOTORDRIVE_V_3_1_H_
/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/
#include "PmsmFoc_UserConfig.h"
/******************************************************************************/
/*--------------------------------Macros--------------------------------------*/
/******************************************************************************/

#if(INVERTERCARD_TYPE == EMOTOR_DRIVE_V_3_1)
/* *************************** EMOTOR_DRIVE_V_3_1 *****************************/
/** \brief Define the hardware inverter VDC link voltage value in V.
 */
#define USER_INVERTER_VDC_LINK_V							(12.0f)
/** \brief Define the GTM PWM Switching Frequency value in Hz */
#define USER_INVERTER_PWM_FREQ_HZ                       	(20000U)
/** \brief Define the dead time, rise(left) in s. */
#define USER_INVERTER_PWM_RISING_DEADTIME_SEC			    (0.0000010f)
/** \brief Define the dead time, fall(right) in s. */
#define USER_INVERTER_PWM_FAILING_DEADTIME_SEC			    (0.0000010f)
/** \brief Define the Initial Bootstrap pre-charging time in ms. */
#define USER_INVERTER_BOOTSTRAP_PRECHARGE_TIME_MS           (20U)
/* ******** Motor Phase Current and DC Link Current Measurement ***************/
/** \brief Define the Phase shunt resistor in ohm */
#define USER_INVERTER_THREE_PHASE_SHUNT_OHM                 (0.01f)
/** \brief Define the Low side DC link shunt current resistor in ohm */
#define USER_INVERTER_DC_LOW_SIDE_SHUNT_OHM                 (0.01f)
/** \brief Define the High side DC link shunt current resistor in ohm */
#define USER_INVERTER_DC_HIGH_SIDE_SHUNT_OHM                (0.01f)
/** \brief Define the VDD5, maximum voltage at EVADC */
#define USER_INVERTER_MAX_ADC_VDD_V              			(5.0f)
/** \brief Define the 30.81 amplifier at TLE9180 value. */
#define USER_INVERTER_PHASECURSENSE_AMPLIFIER_GAIN			(30.81)
/** \brief Define the maximum phase current value measured by using
 *          used phase shunts and selected amplifier gain values. */
#define USER_INVERTER_I_MAX_A                    			((USER_INVERTER_MAX_ADC_VDD_V/(USER_INVERTER_THREE_PHASE_SHUNT_OHM\
															* USER_INVERTER_PHASECURSENSE_AMPLIFIER_GAIN))/2)
/** \brief Define the minimum phase current value. */
#define USER_INVERTER_PHASECURSENSE_I_MIN        			(-USER_INVERTER_I_MAX_A)
/** \brief Define the maximum phase current value. */
#define USER_INVERTER_PHASECURSENSE_I_MAX        			(USER_INVERTER_I_MAX_A)
/** \brief Define the phase current sense gain value. */
#define USER_INVERTER_PHASECURSENSE_I_GAIN       			(-(USER_INVERTER_MAX_ADC_VDD_V/(4096 \
															* USER_INVERTER_PHASECURSENSE_AMPLIFIER_GAIN \
															* USER_INVERTER_THREE_PHASE_SHUNT_OHM)))
/** \brief Define the the phase current sense offset value. */
#define USER_INVERTER_PHASECURSENSE_I_OFFSET     			(2.5 / (USER_INVERTER_PHASECURSENSE_AMPLIFIER_GAIN \
															* USER_INVERTER_THREE_PHASE_SHUNT_OHM))
/** \brief Define the phase current sense amplifier reference voltage gain value.*/
#define USER_INVERTER_PHASECURSENSE_V_GAIN       			(USER_INVERTER_MAX_ADC_VDD_V/4096)
/** \brief Define the phase current sense amplifier reference voltage offset value. */
#define USER_INVERTER_PHASECURSENSE_V_OFFSET     			(0.0)
/** \brief Define the phase current sense amplifier reference voltage nominal offset value. */
#define USER_INVERTER_PHASECURSENSE_V_OFFSET_NOM 			(2048)
/** \brief Define the phase current sense refill trigger value.*/
#define USER_INVERTER_PHASECURSENSE_REFILL_TRIG  			(1 << IFX_EVADC_G_Q_QINR_RF_OFF) | \
															(1 << IFX_EVADC_G_Q_Q0R_EXTR_OFF)
/** \brief Define the number of loops used for current sensing calibration. */
#define USER_INVERTER_PHASECURSENSE_CALIBRATION_COUNT 		(2048)
/** \brief Define the R1/(R2+R1) ratio for DC link MCU ADC */
#define USER_INVERTER_DC_LINK_DIVIDER_RATIO                 (float) (5.6f/(5.6f+56.0f))
/** \brief Define the DC-link voltage sensing scaled gain value.*/
#define USER_INVERTER_DCLINVOLTAGESENSE_GAIN       			(USER_INVERTER_MAX_ADC_VDD_V /(4096 \
															* USER_INVERTER_DC_LINK_DIVIDER_RATIO))
/** \brief Define the DC-link voltage sensing offset initial value.*/
#define USER_INVERTER_DCLINVOLTAGESENSE_OFFSET     			(0.0)
/** \brief Define the DC-link voltage sensing offset nominal value.*/
#define USER_INVERTER_DCLINVOLTAGESENSE_OFFSET_NOM 			(0)
/** \brief Define the R1/(R2+R1) ratio for BEMF Voltage sensing circuit ratio */
#define USER_INVERTER_BEMF_DIVIDER_RATIO                    (float) (5.6f/(5.6f+56.0f))
/** \brief Define the phase voltage sensing scaled gain value.*/
#define USER_INVERTER_BEMFSENSE_GAIN       					(USER_INVERTER_MAX_ADC_VDD_V /(4096 \
															* USER_INVERTER_BEMF_DIVIDER_RATIO))
/** \brief Define the phase voltage sensing offset initial value.*/
#define USER_INVERTER_BEMFSENSE_OFFSET     					(0.0)
/** \brief Define the phase voltage sensing offset nominal value.*/
#define USER_INVERTER_BEMFSENSE_OFFSET_NOM 					(0)
/** \brief Define the high-side DC-link current sensing selected gain value. */
#define USER_INVERTER_HS_DCLINK_CUR_SENSE_DEFAULT_GAIN		(200.0f)
/** \brief Define the high-side DC-link current sensing scaled gain value. */
#define USER_INVERTER_HS_DCLINK_CUR_SENSE_GAIN				((USER_INVERTER_MAX_ADC_VDD_V/(4096 \
															* USER_INVERTER_HS_DCLINK_CUR_SENSE_DEFAULT_GAIN \
															* USER_INVERTER_DC_HIGH_SIDE_SHUNT_OHM)))
/** \brief Define the maximum DC-link current value measured by using
 * single shunt and default amplifier gain value.              */
#define USER_INVERTER_HS_I_MAX_A                    		((USER_INVERTER_MAX_ADC_VDD_V/(USER_INVERTER_DC_HIGH_SIDE_SHUNT_OHM\
															* USER_INVERTER_HS_DCLINK_CUR_SENSE_DEFAULT_GAIN))/2)
/** \brief Define the high-side DC-link current sensing offset initial value.*/
#define USER_INVERTER_HS_DCLINK_CUR_SENSE_OFFSET			(0.0)
/** \brief Define the high-side DC-link current sensing offset nominal value.*/
#define USER_INVERTER_HS_DCLINK_CUR_SENSE_OFFSET_NOM		(0.0)
/** \brief Define the high-side DC-link current sensing minimum value.*/
#define USER_INVERTER_HS_DCLINK_CUR_SENSE_I_MIN      		(-USER_INVERTER_HS_I_MAX_A)
/** \brief Define the high-side DC-link current sensing maximum value.*/
#define USER_INVERTER_HS_DCLINK_CUR_SENSE_I_MAX      		(USER_INVERTER_HS_I_MAX_A)
#endif /* End of (INVERTERCARD_TYPE == EMOTOR_DRIVE_V_3_1) */

/******************************************************************************/
/*------------------------------Global variables------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*--------------------------------Enumerations--------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-----------------------------Data Structures--------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*------------------------Private Variables/Constants-------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-------------------------Global Function Prototypes-------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-------------------------Inline Function Prototypes-------------------------*/
/******************************************************************************/

/******************************************************************************/
/*---------------------Inline Function Implementations------------------------*/
/******************************************************************************/
#endif /* PMSM_FOC_EMOTORDRIVE_V_3_1_ */

