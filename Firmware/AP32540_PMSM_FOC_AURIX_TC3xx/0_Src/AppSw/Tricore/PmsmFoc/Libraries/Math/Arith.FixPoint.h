/**
 * \file Arith.FixPoint.h
 * \brief Fix-point arithmetics library
 *
 * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
 *
 *                            IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 *
 * $Revision: $1084.1
 * $Date: $2013-06-26 20:12:46 GMT
 *
 * \defgroup fixpoint_arithmetics Fix-point arithmetics
 *
 * This module implements Fix-point arithmetics.
 *
 * Function naming:
 * __[m][add|sub][m][s]_r(result format)_i(Parameter 1 Format)[_i(...)[_i(Paramter n format)]]
 *     - (result format) : format of the result in the form xQy. for example Q1.15 => 1Q15
 *     - (Parameter n Format) : format of the parameter in the form xQy. for example Q1.15 => 1Q15
 *     - (Parameter n Format) : format of the parameter in the form xI. for example 16 bit value => 16I
 *
 * \note The 1Q15 value must be passed in the upper 16 bits of the data: Value[0..15] = ignored, Value[16..31] = data
 * \note The 16I value must be passed in the lower 16 bits of the data: Value[0..15] = data, Value[16..31] = must contain the extended sign bit
 * \ingroup mod_cpu_arithmetics
 *
 */

#ifndef MC_FIXPOINT_H
#define MC_FIXPOINT_H
//------------------------------------------------------------------------------
#include "Convert.h"

#ifdef __GNUC__
#include "Arith.FixPoint.Gnu.h"
#endif
#ifdef __TASKING__
#include "Arith.FixPoint.Tasking.h"
#endif

//------------------------------------------------------------------------------
#endif
